// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class SCNBioskoponline7Test {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() throws MalformedURLException {
    driver = new RemoteWebDriver(new URL("http://localhost:4444/wd/hub"), DesiredCapabilities.chrome());
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void sCNBioskoponline7() {
    // Test name: SCN_Bioskop online_7
    // Step # | name | target | value
    // 1 | open | https://bioskoponline.com/ | 
    driver.get("https://bioskoponline.com/");
    // 2 | setWindowSize | 1050x708 | 
    driver.manage().window().setSize(new Dimension(1050, 708));
    // 3 | click | css=.w-36:nth-child(6) > .font-bold | 
    driver.findElement(By.cssSelector(".w-36:nth-child(6) > .font-bold")).click();
    // 4 | click | name=username | 
    driver.findElement(By.name("username")).click();
    // 5 | type | name=username | fikriirhm148@gmail.com
    driver.findElement(By.name("username")).sendKeys("fikriirhm148@gmail.com");
    // 6 | click | css=.bg-transparent | 
    driver.findElement(By.cssSelector(".bg-transparent")).click();
    // 7 | type | css=.bg-transparent | Nirmana148
    driver.findElement(By.cssSelector(".bg-transparent")).sendKeys("Nirmana148");
    // 8 | click | css=.absolute > svg | 
    driver.findElement(By.cssSelector(".absolute > svg")).click();
    // 9 | click | css=.absolute > svg | 
    driver.findElement(By.cssSelector(".absolute > svg")).click();
    // 10 | click | css=.absolute > svg | 
    driver.findElement(By.cssSelector(".absolute > svg")).click();
    // 11 | doubleClick | css=.absolute > svg | 
    // Memastikan tombol unhide pada psasword berfungsi
    {
      WebElement element = driver.findElement(By.cssSelector(".absolute > svg"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
  }
}
